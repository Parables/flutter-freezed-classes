import { oldVisit, PluginFunction, Types } from '@graphql-codegen/plugin-helpers';
import { transformSchemaAST } from '@graphql-codegen/schema-ast';
import { GraphQLSchema } from 'graphql';
import { FlutterFreezedClassPluginConfig } from './config';
import { schemaVisitor } from './schema-visitor';

export const plugin: PluginFunction<FlutterFreezedClassPluginConfig, Types.ComplexPluginOutput> = (
  schema: GraphQLSchema,
  documents: Types.DocumentFile[],
  config: FlutterFreezedClassPluginConfig
) => {
  // return `// The following codes were generated by FlutterFreezedClass Plugin`

  const { schema: _schema, ast } = transformSchemaAST(schema, config);
  const { buildImports, ...visitor } = schemaVisitor(_schema, config);

  const result = oldVisit(ast, {
    leave: visitor,
  });

  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  result.definitions.forEach(def => {
    console.log(def);
  });
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  const generated = result.definitions.filter(def => typeof def === 'string');

  return { prepend: buildImports(), content: [...generated].join('\n') };
};
